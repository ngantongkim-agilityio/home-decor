// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login Screen Should render to match snapshot 1`] = `
<View
  onLayout={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      {
        "paddingBottom": 0,
      },
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      {
        "flexGrow": 1,
        "justifyContent": "center",
        "width": 750,
      }
    }
    showsVerticalScrollIndicator={false}
  >
    <View>
      <View
        style={
          {
            "backgroundColor": {
              "dynamic": {
                "dark": "#36312f",
                "light": "#ffffff",
              },
            },
            "flex": 1,
            "flexDirection": "column",
            "height": 1234,
            "justifyContent": "space-between",
            "paddingBottom": 40,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 40,
          }
        }
      >
        <View
          style={[]}
        >
          <View
            style={[]}
          >
            <RNSVGSvgView
              bbHeight={19}
              bbWidth={22}
              fill="none"
              focusable={false}
              height={19}
              onPress={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              responsible={true}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "flex": 0,
                    "height": 19,
                    "width": 22,
                  },
                ]
              }
              width={22}
            >
              <RNSVGGroup
                fill={null}
                propList={
                  [
                    "fill",
                  ]
                }
              >
                <RNSVGPath
                  d="M11.909 1 1 9.497m0 0L11.909 18M1 9.497h19.62"
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeLinecap",
                      "strokeLinejoin",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4283123012,
                      "type": 0,
                    }
                  }
                  strokeLinecap={1}
                  strokeLinejoin={1}
                  strokeWidth={1.29}
                />
              </RNSVGGroup>
            </RNSVGSvgView>
            <Text
              style={[]}
            >
              Log In
            </Text>
            <View
              style={[]}
            />
          </View>
          <View
            style={[]}
          >
            <Text
              style={[]}
            >
              Welcome
            </Text>
            <Text
              style={[]}
            >
              Please enter your details to proceed.
            </Text>
          </View>
          <View
            style={[]}
          >
            <View
              style={[]}
            >
              <Text
                htmlFor="email"
                id=":r3:"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "color": {
                      "dynamic": {
                        "dark": "#ffffff",
                        "light": "#363130",
                      },
                    },
                    "display": "flex",
                    "fontFamily": "PoppinsRegular",
                    "fontSize": 14,
                    "lineHeight": 20,
                    "userSelect": "none",
                  }
                }
                suppressHighlighting={true}
              >
                Email
              </Text>
              <TextInput
                aria-label="Email"
                focusVisibleStyle={{}}
                focusable={true}
                id="email"
                name="email"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                placeholder="example@example.com"
                placeholderTextColor={
                  {
                    "dynamic": {
                      "dark": "#c0c0c0",
                      "light": "#c0c0c0",
                    },
                  }
                }
                readOnly={false}
                style={
                  {
                    "backgroundColor": {
                      "dynamic": {
                        "dark": "#f0e1d2",
                        "light": "#f0e1d2",
                      },
                    },
                    "borderBottomLeftRadius": 50,
                    "borderBottomRightRadius": 50,
                    "borderBottomWidth": 0,
                    "borderLeftWidth": 0,
                    "borderRightWidth": 0,
                    "borderStyle": "solid",
                    "borderTopLeftRadius": 50,
                    "borderTopRightRadius": 50,
                    "borderTopWidth": 0,
                    "fontFamily": "PoppinsRegular",
                    "fontSize": 14,
                    "height": 41,
                    "minWidth": 0,
                    "paddingBottom": 10,
                    "paddingLeft": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  }
                }
                value=""
              />
            </View>
            <View
              style={[]}
            >
              <Text
                htmlFor="password"
                id=":r9:"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "color": {
                      "dynamic": {
                        "dark": "#ffffff",
                        "light": "#363130",
                      },
                    },
                    "display": "flex",
                    "fontFamily": "PoppinsRegular",
                    "fontSize": 14,
                    "lineHeight": 20,
                    "userSelect": "none",
                  }
                }
                suppressHighlighting={true}
              >
                Password
              </Text>
              <TextInput
                aria-label="Password"
                focusVisibleStyle={{}}
                focusable={true}
                id="password"
                name="password"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                placeholder="********"
                placeholderTextColor={
                  {
                    "dynamic": {
                      "dark": "#c0c0c0",
                      "light": "#c0c0c0",
                    },
                  }
                }
                readOnly={false}
                secureTextEntry={true}
                style={
                  {
                    "backgroundColor": {
                      "dynamic": {
                        "dark": "#f0e1d2",
                        "light": "#f0e1d2",
                      },
                    },
                    "borderBottomLeftRadius": 50,
                    "borderBottomRightRadius": 50,
                    "borderBottomWidth": 0,
                    "borderLeftWidth": 0,
                    "borderRightWidth": 0,
                    "borderStyle": "solid",
                    "borderTopLeftRadius": 50,
                    "borderTopRightRadius": 50,
                    "borderTopWidth": 0,
                    "fontFamily": "PoppinsRegular",
                    "fontSize": 14,
                    "height": 41,
                    "minWidth": 0,
                    "paddingBottom": 10,
                    "paddingLeft": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  }
                }
                value=""
              />
            </View>
          </View>
          <View
            style={[]}
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": {
                      "dynamic": {
                        "dark": "#f4b5a4",
                        "light": "#f4b5a4",
                      },
                    },
                    "borderBottomLeftRadius": 50,
                    "borderBottomRightRadius": 50,
                    "borderBottomWidth": 0,
                    "borderLeftWidth": 0,
                    "borderRightWidth": 0,
                    "borderStyle": "solid",
                    "borderTopLeftRadius": 50,
                    "borderTopRightRadius": 50,
                    "borderTopWidth": 0,
                    "flexDirection": "row",
                    "gap": 10,
                    "height": 41,
                    "justifyContent": "center",
                    "opacity": 1,
                    "width": 186,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": {
                        "dynamic": {
                          "dark": "#cc7862",
                          "light": "#cc7862",
                        },
                      },
                      "fontFamily": "PoppinsBold",
                      "fontSize": 15,
                      "lineHeight": 21,
                      "textDecorationLine": "none",
                    }
                  }
                  suppressHighlighting={true}
                >
                  Log In
                </Text>
              </View>
            </View>
            <Text
              href="#"
              onPress={[Function]}
              role="link"
            >
              <Text
                style={[]}
              >
                Forgot Password?
              </Text>
            </Text>
          </View>
        </View>
        <View
          style={[]}
        >
          <Text
            style={[]}
          >
            or sign up with
          </Text>
          <View
            style={[]}
          >
            <RNSVGSvgView
              bbHeight={34}
              bbWidth={33}
              fill="none"
              focusable={false}
              height={34}
              onPress={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              responsible={true}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "flex": 0,
                    "height": 34,
                    "width": 33,
                  },
                ]
              }
              width={33}
            >
              <RNSVGGroup
                fill={null}
                propList={
                  [
                    "fill",
                  ]
                }
              >
                <RNSVGCircle
                  cx={16.5}
                  cy={17.383}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                    ]
                  }
                  r={16}
                  stroke={
                    {
                      "payload": 4283123012,
                      "type": 0,
                    }
                  }
                />
                <RNSVGPath
                  d="M17.815 27.88v-5.886h3.042a.056.056 0 0 0 .056-.055v-3.76a.056.056 0 0 0-.056-.055h-3.039v-1.722c0-.305.122-.597.337-.813.215-.216.506-.338.81-.339h1.944v-3.495a.376.376 0 0 0-.364-.359h-2.884a3.827 3.827 0 0 0-2.712 1.128 3.859 3.859 0 0 0-1.124 2.723s-.039.56-.068 2.873h-2.95a.111.111 0 0 0-.112.112v3.647a.112.112 0 0 0 .111.112h2.928v5.596m.016.01a10.49 10.49 0 0 1-5.89-4.18 10.565 10.565 0 0 1 1.154-13.379 10.493 10.493 0 0 1 6.29-3.085 10.45 10.45 0 0 1 8.188 2.602 10.53 10.53 0 0 1 2.593 3.558A10.57 10.57 0 0 1 27 17.426a10.557 10.557 0 0 1-2.62 6.97 10.477 10.477 0 0 1-6.559 3.487"
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeLinecap",
                      "strokeLinejoin",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4283123012,
                      "type": 0,
                    }
                  }
                  strokeLinecap={1}
                  strokeLinejoin={1}
                />
              </RNSVGGroup>
            </RNSVGSvgView>
            <RNSVGSvgView
              bbHeight={34}
              bbWidth={34}
              fill="none"
              focusable={false}
              height={34}
              onPress={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              responsible={true}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "flex": 0,
                    "height": 34,
                    "width": 34,
                  },
                ]
              }
              width={34}
            >
              <RNSVGGroup
                fill={null}
                propList={
                  [
                    "fill",
                  ]
                }
              >
                <RNSVGCircle
                  cx={17.311}
                  cy={17.383}
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                    ]
                  }
                  r={16}
                  stroke={
                    {
                      "payload": 4283123012,
                      "type": 0,
                    }
                  }
                />
                <RNSVGPath
                  d="M22.586 11.074a8.195 8.195 0 1 0 2.643 6.028h-8.195"
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeLinecap",
                      "strokeLinejoin",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4283123012,
                      "type": 0,
                    }
                  }
                  strokeLinecap={1}
                  strokeLinejoin={1}
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <Text
            style={[]}
          >
            Don’t have an account? 
            <Text
              href="/"
              onPress={[Function]}
              role="link"
            >
              <Text
                style={[]}
              >
                Sign Up
              </Text>
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
